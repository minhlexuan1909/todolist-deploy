{"version":3,"sources":["components/TodoTitle/index.jsx","components/TodoList/index.jsx","components/TodoAdd/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoTitle","className","TodoList","todoList","setTodo","setisAdding","setFixingTodo","fixingTodo","filterTodos","setFilterTodos","useState","selectedSort","setSelectedSort","searchKeyword","setSearchKeyword","levelArr","levelPriority","level","groupAndShow","group","tmpTodos","filter","item","onClick","onChange","e","target","value","updateSelection","name","id","selected","disabled","sort","item1","item2","type","toLowerCase","includes","Table","striped","bordered","hover","map","index","Badge","bg","text","indexLevel","findIndex","changeLevelByClick","selectFixTodo","idDelete","localStorage","setItem","JSON","stringify","TodoAdd","isAdding","newTodo","setNewTodo","isEditing","setIsEditing","useEffect","console","log","updateNewTodo","turnOffAdding","placeholder","uuidv1","App","tmp","parse","getItem","setTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1882e2c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./todoTitle.css\";\r\n\r\nexport default function TodoTitle() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"todoTitle\">To Do List - Team Web D19</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./todoList.css\";\r\nimport { Badge, Table } from \"react-bootstrap\";\r\n\r\nconst TodoList = ({\r\n  todoList,\r\n  setTodo,\r\n  setisAdding,\r\n  fixingTodo,\r\n  setFixingTodo,\r\n  filterTodos,\r\n  setFilterTodos,\r\n}) => {\r\n  const [selectedSort, setSelectedSort] = useState(\"\");\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const levelArr = [\"Nguy cấp\", \"Bình thường\", \"Còn chán mới cần\"];\r\n\r\n  const showAdding = () => {\r\n    setisAdding(true);\r\n  };\r\n  const deleteTodo = (idDelete) => {\r\n    todoList = todoList.filter((item) => item.id !== idDelete);\r\n    setTodo(todoList);\r\n  };\r\n  const updateLevelColor = (text) => {\r\n    if (text === \"Nguy cấp\") return \"danger\";\r\n    else if (text === \"Bình thường\") return \"warning\";\r\n    else return \"success\";\r\n  };\r\n  const selectFixTodo = (item) => {\r\n    setFixingTodo(item);\r\n    setisAdding(true);\r\n  };\r\n  const sortID = () => {\r\n    todoList.sort((item1, item2) => {\r\n      return item1.id > item2.id ? 1 : -1;\r\n    });\r\n    setTodo([...todoList]);\r\n  };\r\n  const sortName = () => {\r\n    todoList.sort((item1, item2) => {\r\n      return item1.name > item2.name ? 1 : -1;\r\n    });\r\n    setTodo([...todoList]);\r\n  };\r\n  const levelPriority = (level) => {\r\n    if (level === \"Nguy cấp\") return 3;\r\n    if (level === \"Bình thường\") return 2;\r\n    else return 1;\r\n  };\r\n  const sortLevel = () => {\r\n    todoList.sort((item1, item2) => {\r\n      return levelPriority(item1.level) > levelPriority(item2.level) ? -1 : 1;\r\n    });\r\n    setTodo([...todoList]);\r\n  };\r\n  const sortTodo = () => {\r\n    if (selectedSort === \"ID\") sortID();\r\n    else if (selectedSort === \"Tên công việc\") sortName();\r\n    else if (selectedSort === \"Mức độ\") sortLevel();\r\n  };\r\n  const updateSelection = (e) => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n  const changeLevelByClick = (item) => {\r\n    const indexLevel = levelArr.findIndex((level) => level === item.level);\r\n    item.level = levelArr[(indexLevel + 1) % 3];\r\n    setTodo([...todoList]);\r\n    // localStorage.setItem(\"todoList\", JSON.stringify(todoList));\r\n  };\r\n  const groupAndShow = (group) => {\r\n    if (group === \"All\") setFilterTodos(todoList);\r\n    else {\r\n      const tmpTodos = todoList.filter((item) => item.level === group);\r\n      setFilterTodos(tmpTodos);\r\n    }\r\n  };\r\n  const updateKeyword = (e) => {\r\n    setSearchKeyword(e.target.value);\r\n  };\r\n  const handleSearch = () => {\r\n    if (searchKeyword === \"\") {\r\n      setFilterTodos([...todoList]);\r\n      return;\r\n    }\r\n    filterTodos = todoList.filter(\r\n      (item) =>\r\n        item.name.toLowerCase().includes(searchKeyword) ||\r\n        item.level.toLowerCase().includes(searchKeyword)\r\n    );\r\n    setFilterTodos([...filterTodos]);\r\n  };\r\n  // __________________________________________________________\r\n  return (\r\n    <div className=\"todoList\">\r\n      <div className=\"todoList__btns\">\r\n        <button className=\"todoList__addBtn btn\" onClick={showAdding}>\r\n          Thêm công việc mới\r\n        </button>\r\n        <div className=\"todoList__sortSection\">\r\n          <select\r\n            className=\"todoList__sortSelect\"\r\n            onChange={(e) => updateSelection(e)}\r\n            name=\"\"\r\n            id=\"\"\r\n          >\r\n            <option value=\"\" selected disabled>\r\n              Chọn điều kiện sắp xếp\r\n            </option>\r\n            <option value=\"ID\">ID</option>\r\n            <option value=\"Tên công việc\">Tên công việc</option>\r\n            <option value=\"Mức độ\">Mức độ</option>\r\n          </select>\r\n          <button className=\"todoList__sortBtn btn\" onClick={sortTodo}>\r\n            Sắp xếp\r\n          </button>\r\n        </div>\r\n        <div className=\"todoList__search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"todoList__searchField\"\r\n            onChange={updateKeyword}\r\n          />\r\n          <button className=\"todoList__searchBtn btn\" onClick={handleSearch}>\r\n            Tìm kiếm\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <td className=\"table__title\">STT</td>\r\n            <td className=\"table__title\">Tên công việc</td>\r\n            <td className=\"table__title\">Mức độ</td>\r\n            <td className=\"table__title\">Hành động</td>\r\n          </tr>\r\n        </thead>\r\n        {/* {console.log(filterTodos)} */}\r\n        <tbody>\r\n          {filterTodos.map((item, index) => (\r\n            <tr key={item.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{item.name}</td>\r\n              <td>\r\n                <Badge\r\n                  bg={updateLevelColor(item.level)}\r\n                  onClick={() => changeLevelByClick(item)}\r\n                >\r\n                  {item.level}\r\n                </Badge>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"table__fixBtn btn\"\r\n                  onClick={() => selectFixTodo(item)}\r\n                >\r\n                  Sửa\r\n                </button>\r\n                <button\r\n                  className=\"table__deleteBtn btn\"\r\n                  onClick={() => deleteTodo(item.id)}\r\n                >\r\n                  Xóa\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"todoList__levelGroup\">\r\n        <span\r\n          className=\"levelGroup__groupBtn btn\"\r\n          onClick={() => groupAndShow(\"All\")}\r\n        >\r\n          Tất cả\r\n        </span>\r\n        <span\r\n          className=\"levelGroup__groupBtn btn\"\r\n          onClick={() => groupAndShow(\"Nguy cấp\")}\r\n        >\r\n          Nguy cấp\r\n        </span>\r\n        <span\r\n          className=\"levelGroup__groupBtn btn\"\r\n          onClick={() => groupAndShow(\"Bình thường\")}\r\n        >\r\n          Bình thường\r\n        </span>\r\n        <span\r\n          className=\"levelGroup__groupBtn btn\"\r\n          onClick={() => groupAndShow(\"Còn chán mới cần\")}\r\n        >\r\n          Còn chán mới cần\r\n        </span>\r\n      </div>\r\n      {localStorage.setItem(\"todoList\", JSON.stringify(todoList))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport \"./todoAdd.css\";\r\n\r\nexport default function TodoAdd({\r\n  todoList,\r\n  setTodo,\r\n  isAdding,\r\n  setisAdding,\r\n  fixingTodo,\r\n  setFixingTodo,\r\n}) {\r\n  const [newTodo, setNewTodo] = useState({\r\n    id: 1,\r\n    name: \"\",\r\n    level: \"Nguy cấp\",\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // Lợi dụng useEffect để bắt sự thay đổi của fixingTodo để biết được đang ở chức năng Sửa và thay đổi isEditing mà không cần tạo và truyền nó từ App\r\n  useEffect(() => {\r\n    if (fixingTodo != null) {\r\n      console.log(\"hello\");\r\n      setIsEditing(true);\r\n      setNewTodo(fixingTodo);\r\n\r\n      // setisAdding(true);\r\n    }\r\n    return () => {};\r\n  }, [fixingTodo]);\r\n\r\n  const updateNewTodo = (e) => {\r\n    const { name, value } = e.target;\r\n    // e.target =<input type=\"text\" name=\"name\" value={newTodo.name}/>\r\n    // console.log(e.target);\r\n    setNewTodo({\r\n      ...newTodo,\r\n      // Destructuring newTodo, lấy ra name thay bằng value của input\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addNewTodo = () => {\r\n    newTodo.id = uuidv1();\r\n    setTodo([...todoList, newTodo]);\r\n    setNewTodo({\r\n      id: 1,\r\n      name: \"\",\r\n      level: \"Nguy cấp\",\r\n    });\r\n  };\r\n  const turnOffAdding = () => {\r\n    setisAdding(false);\r\n    setIsEditing(false);\r\n    setFixingTodo(null);\r\n  };\r\n  const addBtnOnClick = () => {\r\n    addNewTodo();\r\n    // turnOffAdding();\r\n  };\r\n  const handleFixBtn = () => {\r\n    let index = todoList.findIndex((item) => item.id === newTodo.id);\r\n    todoList[index] = newTodo;\r\n    // localStorage.setItem(\"todoList\", JSON.stringify(todoList));\r\n    setTodo([...todoList]);\r\n    setIsEditing(false);\r\n    setFixingTodo(null);\r\n    turnOffAdding();\r\n  };\r\n  return (\r\n    <div className=\"todoAdd\">\r\n      <div className=\"todoAdd__container\">\r\n        <div className=\"todoAdd__header\">\r\n          <h3>{isEditing ? \"Sửa công việc\" : \"Thêm công việc\"}</h3>\r\n        </div>\r\n        <div className=\"todoAdd__inputField\">\r\n          <div className=\"inputField__section\">\r\n            <div className=\"todoAdd__title\">Tên công việc</div>\r\n            <input\r\n              className=\"todoAdd__input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={newTodo.name}\r\n              onChange={updateNewTodo}\r\n              placeholder=\"Điền tên công việc\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"inputField__section\">\r\n            <div className=\"todoAdd__title\">Mức độ</div>\r\n            <select\r\n              name=\"level\"\r\n              className=\"todoAdd__input\"\r\n              onChange={updateNewTodo}\r\n              value={newTodo.level}\r\n            >\r\n              <option value=\"Nguy cấp\">Nguy cấp</option>\r\n              <option value=\"Bình thường\">Bình thường</option>\r\n              <option value=\"Còn chán mới cần\">Còn chán mới cần</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"todoAdd__btns\">\r\n          <button\r\n            className=\"todoAdd__addBtn btn\"\r\n            onClick={isEditing ? handleFixBtn : addBtnOnClick}\r\n          >\r\n            {isEditing ? \"Sửa\" : \"Thêm\"}\r\n          </button>\r\n          <button className=\"todoAdd__cancelBtn btn\" onClick={turnOffAdding}>\r\n            Huỷ bỏ\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport TodoTitle from \"./components/TodoTitle\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoAdd from \"./components/TodoAdd\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  // localStorage.setItem(\"todoList\", []);\r\n  const tmp = JSON.parse(localStorage.getItem(\"todoList\"));\r\n  const [todoList, setTodos] = useState(tmp === null ? [] : tmp);\r\n\r\n  const [filterTodos, setFilterTodos] = useState(todoList);\r\n  const [isAdding, setisAdding] = useState(true);\r\n  const [fixingTodo, setFixingTodo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setFilterTodos(todoList);\r\n  }, [todoList]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TodoTitle />\r\n      <div className=\"content\">\r\n        {isAdding ? (\r\n          <TodoAdd\r\n            todoList={todoList}\r\n            setTodo={setTodos}\r\n            isAdding={isAdding}\r\n            setisAdding={setisAdding}\r\n            fixingTodo={fixingTodo}\r\n            setFixingTodo={setFixingTodo}\r\n          />\r\n        ) : null}\r\n        <TodoList\r\n          todoList={todoList}\r\n          setTodo={setTodos}\r\n          setisAdding={setisAdding}\r\n          fixingTodo={fixingTodo}\r\n          setFixingTodo={setFixingTodo}\r\n          filterTodos={filterTodos}\r\n          setFilterTodos={setFilterTodos}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}